//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioDeEstado
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estado", Namespace="http://schemas.datacontract.org/2004/07/ServicoEstados")]
    public partial class Estado : object
    {
        
        private string fechaField;
        
        private int idEstadoField;
        
        private int idEstadoImagenField;
        
        private int idUsuarioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fecha
        {
            get
            {
                return this.fechaField;
            }
            set
            {
                this.fechaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEstado
        {
            get
            {
                return this.idEstadoField;
            }
            set
            {
                this.idEstadoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idEstadoImagen
        {
            get
            {
                return this.idEstadoImagenField;
            }
            set
            {
                this.idEstadoImagenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUsuario
        {
            get
            {
                return this.idUsuarioField;
            }
            set
            {
                this.idUsuarioField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDeEstado.IServicioEstado")]
    public interface IServicioEstado
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEstado/RegistrarEstado", ReplyAction="http://tempuri.org/IServicioEstado/RegistrarEstadoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarEstadoAsync(int idUsuario, int idEstadoImagen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEstado/ReaccionarAEstado", ReplyAction="http://tempuri.org/IServicioEstado/ReaccionarAEstadoResponse")]
        System.Threading.Tasks.Task<bool> ReaccionarAEstadoAsync(int idEstado, int idReaccion, string nombreUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEstado/ObtenerEstados", ReplyAction="http://tempuri.org/IServicioEstado/ObtenerEstadosResponse")]
        System.Threading.Tasks.Task<ServicioDeEstado.Estado[]> ObtenerEstadosAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEstado/ObtenerUsuariosQueDieronMeGusta", ReplyAction="http://tempuri.org/IServicioEstado/ObtenerUsuariosQueDieronMeGustaResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerUsuariosQueDieronMeGustaAsync(int idEstado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEstado/ObtenerUsuariosQueDieronNoMeGusta", ReplyAction="http://tempuri.org/IServicioEstado/ObtenerUsuariosQueDieronNoMeGustaResponse")]
        System.Threading.Tasks.Task<string[]> ObtenerUsuariosQueDieronNoMeGustaAsync(int idEstado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServicioEstadoChannel : ServicioDeEstado.IServicioEstado, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServicioEstadoClient : System.ServiceModel.ClientBase<ServicioDeEstado.IServicioEstado>, ServicioDeEstado.IServicioEstado
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioEstadoClient() : 
                base(ServicioEstadoClient.GetDefaultBinding(), ServicioEstadoClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServicioEstado.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioEstadoClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioEstadoClient.GetBindingForEndpoint(endpointConfiguration), ServicioEstadoClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioEstadoClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioEstadoClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioEstadoClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioEstadoClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioEstadoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarEstadoAsync(int idUsuario, int idEstadoImagen)
        {
            return base.Channel.RegistrarEstadoAsync(idUsuario, idEstadoImagen);
        }
        
        public System.Threading.Tasks.Task<bool> ReaccionarAEstadoAsync(int idEstado, int idReaccion, string nombreUsuario)
        {
            return base.Channel.ReaccionarAEstadoAsync(idEstado, idReaccion, nombreUsuario);
        }
        
        public System.Threading.Tasks.Task<ServicioDeEstado.Estado[]> ObtenerEstadosAsync(int idUsuario)
        {
            return base.Channel.ObtenerEstadosAsync(idUsuario);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerUsuariosQueDieronMeGustaAsync(int idEstado)
        {
            return base.Channel.ObtenerUsuariosQueDieronMeGustaAsync(idEstado);
        }
        
        public System.Threading.Tasks.Task<string[]> ObtenerUsuariosQueDieronNoMeGustaAsync(int idEstado)
        {
            return base.Channel.ObtenerUsuariosQueDieronNoMeGustaAsync(idEstado);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioEstado))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioEstado))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/ServicoEstados/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServicioEstadoClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServicioEstado);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServicioEstadoClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServicioEstado);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServicioEstado,
        }
    }
}
